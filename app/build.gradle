plugins {
    id 'application'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation 'com.google.protobuf:protobuf-java:3.20.1'
    implementation 'com.salesforce.servicelibs:jprotoc:1.2.1'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.projectlombok:lombok:1.18.22'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
}

application {
    mainClass = 'net.moznion.protoc.plugin.dynamodb.App'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes 'Main-Class': application.mainClass
    }
}

def devContainerName = 'protoc-gen-java-dynamodb:latest'

task gen(type:Exec) {
    workingDir '../'
    commandLine 'bash', '-c', "docker run -v \$(pwd):/protoc-gen-java-dynamodb -w /protoc-gen-java-dynamodb ${devContainerName} protoc --java_out=./app/src/main/java/ ./protos/options.proto"
}

task buildDockerDevContainer(type:Exec) {
    workingDir '../'
    commandLine 'bash', '-c', "docker build -t ${devContainerName} -f devtools/Dockerfile ."
}
